@import "../../theme/vj-theme.scss";

$input-height: 2rem;
$input-background-color: white;

$font-color: rgba(0, 0, 0, 0.5);
$input-border-size: 1px;
$input-border-color: rgba(0, 0, 0, 0.5);
$input-border-focused-color: rgba(0, 0, 0, 1);
$input-hint-error-heigth: 1rem;

$label-size: 90%;
$label-height: 1.1rem;

$input-autocomplete-height: 2rem;

* {
  box-sizing: border-box;
}
.vj-input-component {
  position: relative;
  .input-container {
    padding: $padding;
    border: $input-border-size solid $input-border-color;
    border-radius: $border-radius;
    display: flex;
    flex-direction: column;
    position: relative;
    background-color: $input-background-color;
    transition: all ease-in-out 0.3s;
    .vj-input-label {
      width: 100%;
      position: absolute;
      top: (0 - calc($label-height * 0.55));
      label {
        width: $label-size;
        height: $label-height;
        position: absolute;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        padding: unset;
        margin: unset;
        color: $font-color;
        font-size: small;
      }
      .invisible-border-top {
        width: $label-size;
        background-color: $input-background-color;
        margin-top: calc($label-height * 0.5);
        height: $input-border-size;
      }
    }
    ::ng-deep {
      input,
      select {
        min-width: 100px;
        height: $input-height;
        padding: unset;
        border: unset;
        color: $font-color;
        &::placeholder {
          color: rgba(0, 0, 0, 0.4);
        }
      }
      input:focus,
      select:focus {
        border: unset;
        outline: unset;
      }
    }
    &:focus-within {
      transition: all ease-in-out 0.1s;
      border: $input-border-size solid $input-border-focused-color;
    }
  }
  .input-hint {
    width: 100%;
    min-height: $input-hint-error-heigth;
    font-size: small;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  }
  .input-autocomplete {
    width: 100%;
    min-height: $input-autocomplete-height;
    background-color: white;
    position: absolute;
    left: 0;
    top: calc($input-height + ($padding * 2) + $input-hint-error-heigth);
    border-radius: $border-radius;
    border: $input-border-size solid $input-border-color;
    .arrow {
      width: 1rem;
      height: 1rem;
      background-color: white;
      border: $input-border-size solid $input-border-color;
      border-bottom: unset;
      border-right: unset;
      position: absolute;
      top: -0.57rem;
      margin-left: calc(50% - 1rem);
      transform: rotate(45deg);
    }
    .input-autocomplete-list {
      width: 100%;
      display: flex;
      flex-direction: column;
      .input-autocomplete-item {
        width: 100%;
        height: 50px;
        display: flex;
        justify-content: start;
        align-items: center;
        padding: $padding;
        &:hover {
          background-color: rgba(0, 0, 0, 0.1);
        }
        z-index: 1;
        cursor: pointer;
      }
      .input-autocomplete-item-disabled {
        background-color: rgba(0, 0, 0, 0.08);
        color: gray;
        pointer-events: none;
        cursor: default;
      }
    }
  }
}
.invalid-state {
  .input-container {
    border: $input-border-size solid red;
    .vj-input-label {
      label {
        color: red;
      }
    }
    ::ng-deep {
      input,
      select {
        color: red;
      }
    }
    &:focus-within {
      border: $input-border-size solid red;
    }
  }
  .input-hint {
    display: none;
  }
  .input-error {
    width: 100%;
    min-height: $input-hint-error-heigth;
    font-size: small;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    color: red;
  }
}
